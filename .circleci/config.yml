version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  test_backend_and_frontend:
    machine: true
    steps:
      #ローカルでCLIを使ってCircleCIをテストする時のエラー回避用
      - run:
          name: Local build handling
          command: |
            if [[ ${CIRCLE_SHELL_ENV} =~ "localbuild" ]]; then
              if [ -d /workdir ]; then
                ln -s /workdir /tmp/_circleci_local_build_repo
              else
                echo "Run this local build using: circleci build -v \$(pwd):/workdir"
                exit 1
              fi
            fi

      - checkout

      - run:
          name: Dockerコンテナの作成
          command: |
            docker-compose build

      - run:
          name: Dockerコンテナの立ち上げ
          command: |
            docker-compose up -d

      - run:
          name: データベースの作成
          command: |
            docker-compose exec backend bundle exec rails db:create
            docker-compose exec backend bundle exec rails db:migrate

      - run:
          name: RSpecの実行
          command: docker-compose exec backend bundle exec rspec

      - run:
          name: Jestの実行
          command: docker-compose exec frontend yarn run test

  build_and_push_image_backend:
    machine:
      image: ubuntu
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          dockerfile: Dockerfile.prod
          path: ./backend/
          region: AWS_REGION
          repo: "doit-backend"

  build_and_push_image_frontend:
    machine:
      image: ubuntu
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          dockerfile: Dockerfile.prod
          path: ./frontend/
          region: AWS_REGION
          repo: "doit-frontend"

workflows:
  version: 2
  test:
    jobs:
      - test_backend_and_frontend:
          filters:
            branches:
              ignore: main
  test_and_deploy:
    jobs:
      - test_backend_and_frontend:
          filters:
            branches:
              only: main
      - build_and_push_image_backend:
          requires:
            - test_backend_and_frontend
          filters:
            branches:
              only: main
      - build_and_push_image_frontend:
          requires:
            - test_backend_and_frontend
          filters:
            branches:
              only: main
      - aws-ecs/deploy-service-update:
          requires:
            - build_and_push_image_backend
            - build_and_push_image_frontend
          family: "doit-task"
          service-name: "doit-service"
          cluster-name: "doit"
          container-image-name-updates: "container=doit-container-backend,tag=${CIRCLE_SHA1}"
          filters:
            branches:
              only: main
      - aws-ecs/deploy-service-update:
          requires:
            - build_and_push_image_backend
            - build_and_push_image_frontend
          family: "doit-task"
          service-name: "doit-service"
          cluster-name: "doit"
          container-image-name-updates: "container=doit-container-frontend,tag=${CIRCLE_SHA1}"
          filters:
            branches:
              only: main